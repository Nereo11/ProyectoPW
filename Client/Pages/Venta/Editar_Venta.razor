@page "/Venta/Editar_Venta/{Id:int}"
@inject HttpClient _http
@using BlazorApp_Act17.Shared.Clases
@inject NavigationManager navegar

<h3>Editar Venta</h3>
<EditForm Model="elVenta" OnValidSubmit="Modificar">
    <DataAnnotationsValidator />

    <div class="mb-3">
        <label for="nombre" class="form-label">Fecha</label>
        <InputDate id="nombre" class="form-control" @bind-Value="elVenta.Fecha" />
        <ValidationMessage For="(()=>elVenta.Fecha)" />
    </div>
    <div class="mb-3">
        <label for="correo" class="form-label">Cantidad Vendida</label>
        <InputNumber class="form-control" id="direccion" @bind-Value="elVenta.Cantidad_Vendida" />
        <ValidationMessage For="(()=>elVenta.Cantidad_Vendida)" />
    </div>
    <div class="mb-3">
        <label for="correo" class="form-label">Precio de Venta</label>
        <InputNumber class="form-control" id="correo" @bind-Value="elVenta.Precio_Venta" />
        <ValidationMessage For="(()=>elVenta.Precio_Venta)" />
    </div>
    <div class="mb-3">
        <label for="telefono" class="form-label">Productos (id)</label>
        <InputText class="form-control" id="productos" @bind-Value="ProductosString" />
    </div>

    <button type="submit" class="btn btn-primary">Guardar Cambios</button>

    <button type="button" @onclick="Cancelar" class="btn btn-primary">Cancelar</button>

</EditForm>

@code {
    [Parameter]
    public int Id { get; set; }
    private string? ProductosString { get; set; }
    private Ventas elVenta = new Ventas();


    protected override async Task OnInitializedAsync()
    {
        elVenta = await _http.GetFromJsonAsync<Ventas>($"api/ventas/{Id}");
    }


   

    private async void Modificar()
    {
        if (!string.IsNullOrEmpty(ProductosString))
        {
            elVenta.ProductosIds = ProductosString.Replace(" ", "")
                .Split(',')
                .Select(id => int.Parse(id.Trim()))
                .ToList();

            // Obtener los productos seleccionados desde la base de datos
            var productos = await _http.GetFromJsonAsync<List<Productos>>("api/productos");
            elVenta.Productos = productos.Where(p => elVenta.ProductosIds.Contains(p.Id)).ToList();
        }

        await _http.PutAsJsonAsync($"api/ventas/{Id}", elVenta);
        navegar.NavigateTo("/Venta");
    }

    private void Cancelar()

    {
        //await _http.PostAsJsonAsync("api/proveedores", elProveedor);
        navegar.NavigateTo("/Venta");
    }
}